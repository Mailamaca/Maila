// See https://aka.ms/vscode-remote/devcontainer.json for format details.
// https://www.allisonthackston.com/articles/vscode_docker_ros2.html
{
    "name": "maila-dev-vscode",
    "containerName": "mailavsc",
    "context": "../",
    "dockerFile": "Dockerfile",
    "build": {
        "args": {
            "WORKSPACE": "${containerWorkspaceFolder}"
        }
    },
    // This will launch the container as a non-root user
    "remoteUser": "snail",
    "runArgs": [
        "--rm",
        "--name=maila-dev-vscode",
        "--network=host",
        "--cap-add=SYS_PTRACE",
        "--security-opt=seccomp:unconfined",
        "--security-opt=apparmor:unconfined",
    ],
    "containerEnv": {
        "DISPLAY": "${localEnv:DISPLAY}"
    },
    // Set *default* container specific settings.json values on container create.
    "settings": {
        "terminal.integrated.shell.linux": "/bin/bash"
    },
    // Add the IDs of extensions you want installed when the container is created.
    "extensions": [
        "ms-azuretools.vscode-docker",
        "ms-python.python",
        "ms-vscode.cpptools",
        "twxs.cmake",
        "ms-vscode.cmake-tools",
        "jbenden.c-cpp-flylint",
        "llvm-vs-code-extensions.vscode-clangd",
        "cheshirekow.cmake-format",
        "yzhang.markdown-all-in-one",
        "ms-python.python",
        "ms-python.vscode-pylance"
    ],
    "mounts": [
        "source=/var/run/docker.sock,target=/var/run/docker.sock,type=bind",
        "source=${localEnv:HOME}/.bash_aliases,target=/home/snail/.bash_aliases,type=bind",
        "source=vscode-server,target=/home/code/.vscode-server,type=volume",
        "source=/tmp/.X11-unix,target=/tmp/.X11-unix,type=bind"
    ],
    // stop the container when the VS Code window is closed / shut down.
    "shutdownAction": "stopContainer",
    // set up-folder as workspace
    "workspaceMount": "source=${localWorkspaceFolder},target=/home/snail/ros_workspace,type=bind,consistency=cached",
    "workspaceFolder": "/home/snail/ros_workspace",
    // Use 'forwardPorts' to make a list of ports inside the container available locally.
    // "forwardPorts": [
    //     2222
    // ],
    // use the appPort property to publish ports to the host.
    "appPort": ["2222:22" ],
    // Uncomment the next line to run commands after the container is created - for example installing curl.
    "postCreateCommand": "echo \"source /opt/ros/$ROS_DISTRO/setup.bash\" >> ~/.bashrc",
    // Uncomment to use the Docker CLI from inside the container. See https://aka.ms/vscode-remote/samples/docker-from-docker.
    // "mounts": [ "source=/var/run/docker.sock,target=/var/run/docker.sock,type=bind" ],
    // Uncomment to add additional local mount points to give your container access to other locations using the mounts property.
    // "mounts": [ "source=${localEnv:HOME}${localEnv:USERPROFILE},target=/host-home-folder,type=bind,consistency=cached" ],
    // Uncomment The runArgs property supports the same list of arguments as the docker run command
}
