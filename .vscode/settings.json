{
    // cpplint settings
    // https://github.com/ament/ament_lint/blob/master/ament_cpplint/ament_cpplint/main.py
    "cpplint.cpplintPath": "/home/snail/.local/bin/cpplint",
    "cpplint.lineLength": 100,
    "cpplint.extensions": [
        "c",
        "cc",
        "cpp",
        "cxx"
    ],
    "cpplint.headers": [
        "h++",
        "cuh",
        "hxx",
        "hpp",
        "h"
    ],
    "cpplint.filters": [
        // we do allow C++11
        "-build/c++11",
        // we consider passing non-const references to be ok
        "-runtime/references",
        // we wrap open curly braces for namespaces, classes and functions
        "-whitespace/braces",
        // we don't indent keywords like public, protected and private with one space
        "-whitespace/indent",
        // we allow closing parenthesis to be on the next line
        "-whitespace/parens",
        // we allow the developer to decide about whitespace after a semicolon
        "-whitespace/semicolon",
    ],
    "cpplint.root": "${workspaceFolder}/src",
    "cpplint.repository": "${workspaceFolder}",
    // Python config
    "python.pythonPath": "/usr/bin/python3",
    "python.linting.flake8Enabled": true,
    "editor.formatOnSave": true,
    "C_Cpp.enhancedColorization": "Enabled",
    "C_Cpp.clang_format_sortIncludes": true,
    "C_Cpp.clang_format_path": "/usr/bin/clang-format",
    "C_Cpp.loggingLevel": "Warning",
    // Need to load the environment for the build
    "terminal.integrated.shellArgs.linux": [
        "-l",
        "-i"
    ],
    "files.associations": {
        "chrono": "cpp",
        "cctype": "cpp",
        "clocale": "cpp",
        "cmath": "cpp",
        "csignal": "cpp",
        "cstdarg": "cpp",
        "cstddef": "cpp",
        "cstdio": "cpp",
        "cstdlib": "cpp",
        "cstring": "cpp",
        "ctime": "cpp",
        "cwchar": "cpp",
        "cwctype": "cpp",
        "array": "cpp",
        "atomic": "cpp",
        "strstream": "cpp",
        "bit": "cpp",
        "*.tcc": "cpp",
        "bitset": "cpp",
        "codecvt": "cpp",
        "complex": "cpp",
        "condition_variable": "cpp",
        "cstdint": "cpp",
        "deque": "cpp",
        "list": "cpp",
        "map": "cpp",
        "set": "cpp",
        "unordered_map": "cpp",
        "vector": "cpp",
        "exception": "cpp",
        "algorithm": "cpp",
        "functional": "cpp",
        "iterator": "cpp",
        "memory": "cpp",
        "memory_resource": "cpp",
        "numeric": "cpp",
        "optional": "cpp",
        "random": "cpp",
        "ratio": "cpp",
        "string": "cpp",
        "string_view": "cpp",
        "system_error": "cpp",
        "tuple": "cpp",
        "type_traits": "cpp",
        "utility": "cpp",
        "fstream": "cpp",
        "future": "cpp",
        "initializer_list": "cpp",
        "iomanip": "cpp",
        "iosfwd": "cpp",
        "iostream": "cpp",
        "istream": "cpp",
        "limits": "cpp",
        "mutex": "cpp",
        "new": "cpp",
        "ostream": "cpp",
        "shared_mutex": "cpp",
        "sstream": "cpp",
        "stdexcept": "cpp",
        "streambuf": "cpp",
        "thread": "cpp",
        "cfenv": "cpp",
        "cinttypes": "cpp",
        "typeindex": "cpp",
        "typeinfo": "cpp",
        "variant": "cpp",
        "*.idl": "cpp"
    },
    "[cpp]": {
        "editor.tabSize": 2,
        "editor.rulers": [
            80,
            100
        ]
    },
}